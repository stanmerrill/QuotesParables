@model QuotesParables.ViewModels.EditQuoteViewModel
@{ ViewBag.Title = "Edit"; }
<h2>Edit</h2>

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>Quote</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.QuoteId)
    @Html.HiddenFor(model => model.CreateDate)
    @Html.HiddenFor(model => model.UpdateDate)
    @Html.HiddenFor(model => model.UpdatedByLogonAccountId)
    @Html.HiddenFor(model => model.CreatedByLogonAccountId)
    @*@*-------------Quote Text*@
    <div>
        @Html.LabelFor(model => model.QuoteText, htmlAttributes: new { @class = "text-primary align-top col-md-2" })<br />
        <textarea cols="100" rows="15" id="QuoteText" name="QuoteText" style='color: black; background-color: white; font-size: 18px;'>@Model.QuoteText</textarea>
    </div>
    @*-------------Author Name*@
    <div class="form-group">
        @Html.LabelFor(model => model.AuthorName, htmlAttributes: new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            <Input type="text" id="AuthorName" size="100" name="AuthorName" style='color: black; font-size: 18px;' value="@Model.AuthorName" />
            @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger" })
        </div>
    </div>
    @*-------------Category 1 *@
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.CategoryId,
                                                                             new SelectList(
                                                                                 Model.CategoryDictionary,
                                                                                 "Key",
                                                                                 "Value", Model.CategoryId), htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    @*-------------Category 2 *@
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId2, new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.CategoryId2,
                                                                  new SelectList(
                                                                      Model.CategoryDictionary,
                                                                      "Key",
                                                                      "Value", Model.CategoryId2), htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    @*-------------Category 3 *@
    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId3, new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.CategoryId3,
                                                                       new SelectList(
                                                                           Model.CategoryDictionary,
                                                                           "Key",
                                                                           "Value", Model.CategoryId3), htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    @*-------------*Type*@
    <div class="form-group">
        <label class="text-primary col-md-2" for="QuoteTypeId">Type</label>
        @*@Html.LabelFor(model => model.QuoteTypeId, "QuoteTypeId", htmlAttributes: new { @class = "text-primary col-md-2" })*@
        <div class="col-md-10">
            @Html.DropDownList("QuoteTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.QuoteTypeId, "", new { @class = "text-danger" })
        </div>
    </div>
    @*-------------submit
        @*-------------*@
    <div class="form-group">
        @Html.LabelFor(model => model.Contributor, "Contributor", htmlAttributes: new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            <Input type="text" id="Contributor" size="100" name="Contributor" style='color: blue; font-size: 18px;' value="@Model.Contributor" />
            @Html.ValidationMessageFor(model => model.Contributor, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Approved, htmlAttributes: new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            <select class="form-control" id="Approved" name="Approved">
                @if (Model.Approved == "Y")
                {
                    <option selected="selected" value="Y">Yes</option>
                    <option value="N">No</option> }
                else
                {
                    <option value="Y">Yes</option>
                    <option selected="selected" value="N">No</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    @*-------------Repeat update*@
    <div class="form-group">
        <label class="text-primary text-primary  col-md-2" for="CategoryId">Update and Retrieve next</label>
        <div class="col-md-10">
            <select class="form-control" id="CategoryId" name="repeatUpdate">
                @if (Model.repeatUpdate == "Y")
                {
<option selected="selected" value="Y">Yes</option>
                    <option value="N">No</option> }
                                    else
                                    {
                    <option value="Y">Yes</option>
                                        <option selected="selected" value="N">No</option>}
            </select>
            <span class="field-validation-valid text-danger" data-valmsg-for="CategoryId" data-valmsg-replace="true"></span>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Likes, htmlAttributes: new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Likes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Likes, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.CreatedByLogonAccountId, htmlAttributes: new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            @Html.Raw(Model.getCreateUser())
            @Html.ValidationMessageFor(model => model.CreatedByLogonAccountId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UpdatedByLogonAccountId, htmlAttributes: new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            @Html.Raw(Model.getUpdateUser())
            @Html.ValidationMessageFor(model => model.UpdatedByLogonAccountId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            @Html.Raw(Model.CreateDate)
            @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UpdateDate, htmlAttributes: new { @class = "text-primary col-md-2" })
        <div class="col-md-10">
            @Html.Raw(Model.UpdateDate)
            @Html.ValidationMessageFor(model => model.UpdateDate, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
                    }
                    }

                    @section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                    }
                    <script type="text/javascript">
                        $("#QuoteText").focus();
                    </script>

